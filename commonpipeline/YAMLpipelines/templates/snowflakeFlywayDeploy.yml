parameters:
- name: jobName
  default: ''
- name: databaseName
  default: ''
- name: databasePostfix
  default: '_DEV'
- name: artifactName
  default: 'DatabaseArtifacts'
- name: vmImage
  default: 'ubuntu-latest'  
- name: containerImage
  default: 'flyway/flyway-azure:latest-alpine'
- name: environmentName
  default: 'DEV'  

jobs:
  - deployment: ${{ parameters.jobName }}
    displayName: deploy to ${{ parameters.jobName }}
    timeoutInMinutes: 10
    pool:
      vmImage: ${{ parameters.vmImage }}
    container:
      image: ${{ parameters.containerImage }}    
    environment: ${{ parameters.environmentName }}
    strategy:
      runOnce:
        deploy:
          steps:
          # download location $(Pipeline.Workspace)/{artifact}
          - download: current
            artifact: ${{ parameters.artifactName }}
          - bash: |
              echo "##vso[task.setvariable variable=SNOWFLAKE_JDBC_URL]$(SNOWFLAKE_JDBC_URL)$(SNOWFLAKE_ACCOUNT_NAME)/?warehouse=$(SNOWFLAKE_WAREHOUSE)&role=$(SNOWFLAKE_ROLENAME)&authenticator=$(SNOWFLAKE_AUTHENTICATOR)"
            name: Construct_JDBC_URL
          - script: flyway -url='$(SNOWFLAKE_JDBC_URL)&db=${{ parameters.databaseName }}${{ parameters.databasePostfix }}' -user=$(SNOWFLAKE_DEVOPS_USERNAME) -password=$(SNOWFLAKE_DEVOPS_SECRET) -locations='filesystem:$(Pipeline.Workspace)/${{ parameters.artifactName }}/${{ parameters.databaseName }}' repair
            name: Run_flyway_Repair
          - script: flyway -url='$(SNOWFLAKE_JDBC_URL)&db=${{ parameters.databaseName }}${{ parameters.databasePostfix }}' -user=$(SNOWFLAKE_DEVOPS_USERNAME) -password=$(SNOWFLAKE_DEVOPS_SECRET) -locations='filesystem:$(Pipeline.Workspace)/${{ parameters.artifactName }}/${{ parameters.databaseName }}' migrate
            name: Run_flyway_Migrate
          - script: flyway -url='$(SNOWFLAKE_JDBC_URL)&db=${{ parameters.databaseName }}${{ parameters.databasePostfix }}' -user=$(SNOWFLAKE_DEVOPS_USERNAME) -password=$(SNOWFLAKE_DEVOPS_SECRET) -locations='filesystem:$(Pipeline.Workspace)/${{ parameters.artifactName }}/${{ parameters.databaseName }}' validate
            name: Run_flyway_Validate